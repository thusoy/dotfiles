token () {
    local length=${1:-20}
    python -c 'import os, base64, sys; print(base64.urlsafe_b64encode(os.urandom(int(sys.argv[1]))).decode("utf-8").rstrip("="))' $length
}

highstate-analyze () {
    grep -e ID: -e Function: -e Duration: | cut -d : -f 2 | python -c "import sys; lines = [line.strip() for line in sys.stdin]; print('\n'.join('%s %s (%s)' % (f3, f1, f2) for f1, f2, f3 in [lines[i*3:i*3+3] for i in range(len(lines)//3)]))" | sort -nr
}

plist_to_json () {
    plutil -convert json -o - "$1" | json
}

extract-eqsep-fields () {
    # Allows easy filtering of KEY=VAL KEY2=VAL2 data
    python -c "
import sys
fields = sys.argv[1].split(',') if len(sys.argv) == 2 else []
for line in sys.stdin:
    parts = line.split()
    values = {t[0]: t[1] if len(t) == 2 else '' for t in (part.split('=') for part in parts)}
    if fields:
        print ' '.join('%s=%s' % (key, values[key] if key in values else '') for key in fields)
    else:
        print ' '.join('%s=%s' % (key, val) for key, val in values.items())" $1
}

number_stats () {
    grep -E '[0-9]*(\.[0-9]*)?' \
        | R -q -e "x <- read.csv('stdin', header = F); summary(x); sd(x[ , 1])"
}

psgrep () {
    first=$(echo $1 | cut -c1)
    last=$(echo $1 | cut -c2-)
    ps aux \
        | grep -i "[$first]$last"
}

highlight () {
    grep --color -E "$1|$"
}

countdown () {
    local seconds=$1
    local end=$(($(date +%s) + seconds))
    while [ "$end" -ge $(date +%s) ]; do
        echo -ne "$(($end - $(date +%s) ))\r"
        sleep 0.1
    done
    echo
}

cert () {
    echo \
        | openssl s_client -connect "$1":443 -servername "${2:-$1}" \
        | sed -ne '/-BEG/,/-END/p'
}

interval () {
    python -c "import argparse, sys

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('number', type=float)
    parser.add_argument('-m', '--milliseconds', action='store_true')
    args = parser.parse_args()
    if args.milliseconds:
        args.number /= 1000
    print(interval(args.number))

def interval(num):
    '''
    >>> interval(1)
    '1s'
    >>> interval(2)
    '2s'
    >>> interval(62)
    '1m2s'
    >>> interval(3665)
    '1h1m5s'
    >>> interval(86401)
    '1d0h0m1s'
    '''
    components = []
    prefixes = [
      ('d', 86400, 1e6),
      ('h', 3600, 24),
      ('m', 60, 60),
      ('s', 1, 60),
    ]
    for prefix, divisor, modulo in prefixes:
        if num >= divisor:
            components.append('%d%s' % (num//divisor % modulo, prefix))

    return ''.join(components)

if __name__ == '__main__':
    main()
" "$@"
}

rev () {
    local new_name="${1%.*}_$(md5 -r $1 | head -c 12).${1##*.}"
    echo "Revving $1 -> $new_name"
    mv "$1" "$new_name"
}

netst () {
    if [[ "$OSTYPE" == "darwin"* ]]; then
        lsof -PniTCP -sTCP:LISTEN
    else
        sudo netstat -tulpn
    fi
}

dnssort() {
    python3 -c 'import sys; [sys.stdout.write(".".join(y[::-1]) + "\n") for y in sorted([x.strip().split(".")[::-1] for x in sys.stdin])]'
}

sum() {
    # Helper to sum lines of ints
    sed '2,$s/$/+/;$s/$/p/' | dc
}

alias .=source
alias ..='cd ..'
alias ...='cd ../../'
alias grep='grep --color=auto'
# -G is the BSD ls option for what is --color=auto on GNU ls
alias ls='ls -G'
alias ll='ls -alhF'
alias l='ls -lhF'
# -i turns on smartcase search
alias less='less -i'
alias config='git --git-dir ~/.dotfiles'
alias sudo='sudo '
# Print history with timestamp and execution time
alias history='history -Di'
alias serve='python3 -m http.server'
alias space='du -shc *(N) .[^.]*(N) | gsort -h'
alias json='python -m json.tool'
alias xml='python3 -c "import sys, xml.dom.minidom; ugly_xml = xml.dom.minidom.parseString(sys.stdin.read()); print(ugly_xml.toprettyxml(), end=\"\")"'
alias pc='python -c'
alias fw='sudo iptables -L -v -n --line-numbers'
alias fw6='sudo ip6tables -L -v -n --line-numbers'
alias ql='qlmanage -p'
alias ptr='dig +short -x'
alias g=git
alias v=vagrant
# Guard since I often mistype `g s`
alias gs='g s'
alias uuid='python -c "import uuid; print(uuid.uuid4())"'
alias telnet='echo "Escape is probably Ctrl+5!"; telnet'
alias did="vim ~/Dropbox/Notater/done.md +'r!date' +'normal o' +'normal O-  ' +startinsert -c 'set tw=80'"
alias beep='say -v Alex "[[volm 3.0]] BEEP BEEP BEEP BEEP Your [[emph ++]] thang [[emph -]] [[slnc 10]] is done" -r 250'
alias pubip='curl -s https://canhazip.com'
